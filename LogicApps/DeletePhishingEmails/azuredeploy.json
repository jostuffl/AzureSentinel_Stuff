{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "",
        "description": "",
        "prerequisites": "",
        "prerequisitesDeployTemplateFile": "",
        "lastUpdateTime": "",
    "entities": [],
"tags": [],
"support": {
    "tier": "community"
},
"author": {
    "name": ""
}
},
"parameters": {
"PlaybookName": {
    "defaultValue": "DeletePhishingEmails",
    "type": "string"
}
},
"variables": {
"azuremonitorlogsConnectionName": "[concat('azuremonitorlogs-', parameters('PlaybookName'))]"
},
"resources": [
{
    "properties": {
        "provisioningState": "Succeeded",
        "state": "Enabled",
        "definition": {
            "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
                "$connections": {
                "defaultValue": {},
                "type": "Object"
            }
        },
        "triggers": {
            "manual": {
                "type": "Request",
                "kind": "Http",
                "inputs": {
                    "schema": {
                        "properties": {
                            "Internal": {
                                "type": "string"
                            },
                            "InternetMessageId": {
                                "type": "string"
                            },
                            "Sender": {
                                "type": "string"
                            },
                            "Subject": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                }
            }
        },
        "actions": {
            "ForEach-EventBody": {
                "foreach": "@body('ParseQueryEvents')",
                "actions": {
                    "HTTP-Get-MessageID": {
                        "runAfter": {
                            "Parse-EventBody": [
                                "Succeeded"
                            ]
                        },
                        "type": "Http",
                        "inputs": {
                            "authentication": {
                                "audience": "https://graph.microsoft.com",
                                "type": "ManagedServiceIdentity"
                            },
                            "method": "GET",
                            "uri": "https://graph.microsoft.com/v1.0/users/@{body('Parse-EventBody')?['RecipientEmailAddress']}/messages?$filter=internetMessageId eq '@{body('Parse-EventBody')?['InternetMessageId']}'"
                        }
                    },
                    "IfStatusCode200": {
                        "actions": {
                            "ForEachValue": {
                                "foreach": "@body('Parse-Get-MessageID')?['value']",
                                "actions": {
                                    "IfInternetMessageId-Exist": {
                                        "actions": {
                                            "If-MsgIDs-Not-Contain-Id": {
                                                "actions": {
                                                    "Add-Id-To-MsgIDs": {
                                                    "runAfter": {},
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "MsgIDs",
                                                        "value": "@items('ForEachValue')?['id']"
                                                    }
                                                },
                                                "Delete-Email-on-MsgId-and-User": {
                                                    "runAfter": {
                                                        "Add-Id-To-MsgIDs": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "method": "DELETE",
                                                        "uri": "https://graph.microsoft.com/v1.0/users/@{body('Parse-EventBody')?['RecipientEmailAddress']}/messages/@{body('Parse-Get-MessageID')?['value'][0]['id']}"
                                                    }
                                                }
                                            },
                                        "runAfter": {},
                                        "expression": {
                                            "and": [
                                                {
                                                    "not": {
                                                        "contains": [
                                                            "@variables('MsgIDs')",
                                                            "@items('ForEachValue')?['id']"
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "type": "If"
                                    }
                                },
                            "runAfter": {},
                            "expression": {
                                "and": [
                                    {
                                        "startsWith": [
                                            "@items('ForEachValue')?['internetMessageId']",
                                            "<"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        }
                    },
                    "runAfter": {
                        "Parse-Get-MessageID": [
                            "Succeeded"
                        ]
                    },
                    "type": "Foreach"
                },
                "Parse-Get-MessageID": {
                "runAfter": {},
                "type": "ParseJson",
                "inputs": {
                    "content": "@body('HTTP-Get-MessageID')",
                    "schema": {
                        "properties": {
                            "@@odata.context": {
                                "type": "string"
                            },
                            "value": {
                                "items": {
                                    "properties": {
                                        "@@odata.etag": {
                                            "type": "string"
                                        },
                                        "bccRecipients": {
                                            "type": "array"
                                        },
                                        "body": {
                                            "properties": {
                                                "content": {
                                                    "type": "string"
                                                },
                                                "contentType": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "bodyPreview": {
                                            "type": "string"
                                        },
                                        "categories": {
                                            "type": "array"
                                        },
                                        "ccRecipients": {
                                            "type": "array"
                                        },
                                        "changeKey": {
                                            "type": "string"
                                        },
                                        "conversationId": {
                                            "type": "string"
                                        },
                                        "conversationIndex": {
                                            "type": "string"
                                        },
                                        "createdDateTime": {
                                            "type": "string"
                                        },
                                        "flag": {
                                            "properties": {
                                                "flagStatus": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "from": {
                                            "properties": {
                                                "emailAddress": {
                                                    "properties": {
                                                        "address": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "hasAttachments": {
                                            "type": "boolean"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "importance": {
                                            "type": "string"
                                        },
                                        "inferenceClassification": {
                                            "type": "string"
                                        },
                                        "internetMessageId": {
                                            "type": "string"
                                        },
                                    "isDeliveryReceiptRequested": {},
                                    "isDraft": {
                                        "type": "boolean"
                                    },
                                    "isRead": {
                                        "type": "boolean"
                                    },
                                    "isReadReceiptRequested": {
                                        "type": "boolean"
                                    },
                                    "lastModifiedDateTime": {
                                        "type": "string"
                                    },
                                    "parentFolderId": {
                                        "type": "string"
                                    },
                                    "receivedDateTime": {
                                        "type": "string"
                                    },
                                    "replyTo": {
                                        "type": "array"
                                    },
                                    "sender": {
                                        "properties": {
                                            "emailAddress": {
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "sentDateTime": {
                                        "type": "string"
                                    },
                                    "subject": {
                                        "type": "string"
                                    },
                                    "toRecipients": {
                                        "items": {
                                            "properties": {
                                                "emailAddress": {
                                                    "properties": {
                                                        "address": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "required": [
                                                "emailAddress"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "webLink": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "@@odata.etag",
                                    "id",
                                    "createdDateTime",
                                    "lastModifiedDateTime",
                                    "changeKey",
                                    "categories",
                                    "receivedDateTime",
                                    "sentDateTime",
                                    "hasAttachments",
                                    "internetMessageId",
                                    "subject",
                                    "bodyPreview",
                                    "importance",
                                    "parentFolderId",
                                    "conversationId",
                                    "conversationIndex",
                                    "isDeliveryReceiptRequested",
                                    "isReadReceiptRequested",
                                    "isRead",
                                    "isDraft",
                                    "webLink",
                                    "inferenceClassification",
                                    "body",
                                    "sender",
                                    "from",
                                    "toRecipients",
                                    "ccRecipients",
                                    "bccRecipients",
                                    "replyTo",
                                    "flag"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            }
        }
    },
    "runAfter": {
        "HTTP-Get-MessageID": [
            "Succeeded",
            "TimedOut",
            "Skipped",
            "Failed"
        ]
    },
    "expression": {
        "and": [
            {
                "equals": [
                    "@outputs('HTTP-Get-MessageID')['statusCode']",
                    200
                ]
            }
        ]
    },
    "type": "If"
},
"Parse-EventBody": {
"runAfter": {},
"type": "ParseJson",
"inputs": {
    "content": "@items('ForEach-EventBody')",
    "schema": {
        "properties": {
            "InternetMessageId": {
                "type": "string"
            },
            "RecipientEmailAddress": {
                "type": "string"
            },
            "SenderFromAddress": {
                "type": "string"
            },
            "Subject": {
                "type": "string"
            }
        },
        "type": "object"
    }
}
}
},
"runAfter": {
"ParseQueryEvents": [
"Succeeded"
]
},
"type": "Foreach"
},
"MsgIDs": {
"runAfter": {
"Parse-Initial-POST-Request": [
"Succeeded"
]
},
"type": "InitializeVariable",
"inputs": {
"variables": [
{
    "name": "MsgIDs",
    "type": "array"
}
]
}
},
"Parse-Initial-POST-Request": {
"runAfter": {},
"type": "ParseJson",
"inputs": {
"content": "@triggerBody()",
"schema": {
"properties": {
"InternetMessageId": {
    "type": "string"
},
"Sender": {
    "type": "string"
},
"Subject": {
    "type": "string"
}
},
"type": "object"
}
}
},
"ParseQueryEvents": {
"runAfter": {
"Query-Email-Events": [
"Succeeded"
]
},
"type": "ParseJson",
"inputs": {
"content": "@body('Query-Email-Events')?['value']",
"schema": {
"items": {
"properties": {
    "InternetMessageId": {
        "type": "string"
    },
    "RecipientEmailAddress": {
        "type": "string"
    },
    "SenderFromAddress": {
        "type": "string"
    },
    "Subject": {
        "type": "string"
    }
},
"required": [
    "InternetMessageId",
    "SenderFromAddress",
    "RecipientEmailAddress",
    "Subject"
],
"type": "object"
},
"type": "array"
}
}
},
"Query-Email-Events": {
"runAfter": {
"MsgIDs": [
"Succeeded"
]
},
"type": "ApiConnection",
"inputs": {
"body": "let IntMsgId = \"@{body('Parse-Initial-POST-Request')?['InternetMessageId']}\";\nlet Subj = \"@{body('Parse-Initial-POST-Request')?['Subject']}\";\nlet Sender = \"@{body('Parse-Initial-POST-Request')?['Sender']}\";\nEmailEvents\n| project SenderFromAddress, InternetMessageId, RecipientEmailAddress, Subject, TimeGenerated\n| where SenderFromAddress has Sender\n| where Subject == Subj\n| where InternetMessageId has iff(isempty(IntMsgId),\"<\",IntMsgId)\n| summarize arg_max(TimeGenerated,*) by InternetMessageId, RecipientEmailAddress\n| project-away TimeGenerated",
"host": {
"connection": {
"name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
}
},
"method": "post",
"path": "/queryData",
"queries": {
"resourcegroups": "jtst1-log",
"resourcename": "sentinellab1",
"resourcetype": "Log Analytics Workspace",
"subscriptions": "5aa2c531-f573-468b-b152-cf8fdd0ca5b9",
"timerange": "1d"
}
}
}
},
"outputs": {}
},
"parameters": {
"$connections": {
"value": {
"azuremonitorlogs": {
"connectionId": "[resourceId('Microsoft.Web/connections', variables('azuremonitorlogsConnectionName'))]",
"connectionName": "[variables('azuremonitorlogsConnectionName')]",
"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
}
}
}
}
},
"name": "[parameters('PlaybookName')]",
"type": "Microsoft.Logic/workflows",
"location": "[resourceGroup().location]",
"identity": {
"type": "SystemAssigned"
},
"tags": {
"hidden-SentinelTemplateName": "DeletePhishingEmails",
"hidden-SentinelTemplateVersion": "1.0"
},
"apiVersion": "2017-07-01",
"dependsOn": [
"[resourceId('Microsoft.Web/connections', variables('azuremonitorlogsConnectionName'))]"
]
},
{
"type": "Microsoft.Web/connections",
"apiVersion": "2016-06-01",
"name": "[variables('azuremonitorlogsConnectionName')]",
"location": "[resourceGroup().location]",
"kind": "V1",
"properties": {
"displayName": "[variables('azuremonitorlogsConnectionName')]",
"customParameterValues": {},
"api": {
"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
}
}
}
]
}
